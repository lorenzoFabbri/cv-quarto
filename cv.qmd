---
format:
  pdf:
    pdf-engine: lualatex
    documentclass: article
    fontsize: 12pt
    include-in-header:
      - text: |
          \pagestyle{fancy}
      - partials/header.tex
    filters:
      - partials/styles.lua
    citeproc: false
    cite-method: biblatex
bibliography: bibliography.bib
csl: partials/ama11.csl
execute:
  echo: false
editor_options:
  chunk_output_type: console
---

```{r}
cvevents <- function(tbl, what, when, where, details) {
  command_start <- "\\cvevent"
  res <- paste0(
    command_start,
    "{", tbl[[when]], "}",
    "{", tbl[[what]], "}",
    "{", tbl[[where]], "}"
  )
  
  tbl[[details]] <- sapply(
    tbl[[details]], function(x) {
      paste0("{", x, "}", collapse = ",")
    }
  )
  res <- paste0(res, "{", tbl[[details]], "}")
  
  cat(res, sep = "\n")
}

cvshortevents <- function(tbl, what, when, where) {
  command_start <- "\\cvshortevent"
  res <- paste0(
    command_start,
    "{", tbl[[when]], "}",
    "{", tbl[[what]], "}",
    "{", tbl[[where]], "}"
  )
  
  cat(res, sep = "\n")
}
```

```{r}
my_orcid <- "0000-0003-3031-322X"
my_googlescholar <- "QbPv1H0AAAAJ"
```

\name{Lorenzo Fabbri}
\vspace*{-10pt}
\updated{\updateinfo}
\sepspace
\info{Institutional email}{\texttt{lorenzo.fabbri@isglobal.org}}
\info{Personal email}{\texttt{lorenzo.fabbri92sm@gmail.com}}
\sepspace

# Working Experience

```{r}
#| label: work_experience
#| output: asis

exp_raw <- rorcid::orcid_employments(orcid = my_orcid)
exp_ <- exp_raw[[my_orcid]]$`affiliation-group`$summaries |>
  dplyr::bind_rows() |>
  tibble::as_tibble() |>
  janitor::clean_names() |>
  dplyr::mutate(
    employment_summary_end_date_year_value = tidyr::replace_na(
      employment_summary_end_date_year_value, "Present"
    ),
    location = paste0(
      employment_summary_organization_name,
      " (",
      employment_summary_organization_address_city,
      ", ",
      employment_summary_organization_address_country,
      ")"
    ),
    dates = paste0(
      employment_summary_start_date_year_value,
      " - ",
      employment_summary_end_date_year_value
    )
  ) |>
  cvshortevents(
    what = "employment_summary_role_title",
    when = "dates",
    where = "location"
  )
```

<!-- # Research Visits -->

<!-- ```{r} -->
<!-- #| label: research_visits -->
<!-- #| output: asis -->

<!-- visits_raw <- rorcid::orcid_invited_positions(orcid = my_orcid) -->
<!-- visits <- visits_raw[[my_orcid]]$`affiliation-group`$summaries |> -->
<!--   dplyr::bind_rows() |> -->
<!--   tibble::as_tibble() |> -->
<!--   janitor::clean_names() |> -->
<!--   dplyr::mutate( -->
<!--     invited_position_end_date_year_value = tidyr::replace_na( -->
<!--       invited_position_summary_end_date_year_value, "Present" -->
<!--     ), -->
<!--     location = paste0( -->
<!--       invited_position_summary_organization_name, -->
<!--       " (", -->
<!--       invited_position_summary_organization_address_city, -->
<!--       ", ", -->
<!--       invited_position_summary_organization_address_country, -->
<!--       ")" -->
<!--     ), -->
<!--     dates = paste0( -->
<!--       invited_position_summary_start_date_year_value, -->
<!--       " - ", -->
<!--       invited_position_summary_end_date_year_value -->
<!--     ) -->
<!--   ) |> -->
<!--   cvshortevents( -->
<!--     what = "invited_position_summary_role_title", -->
<!--     when = "dates", -->
<!--     where = "location" -->
<!--   ) -->
<!-- ``` -->

# Funding

```{r}
#| label: funding
#| output: asis

funds_raw <- rorcid::orcid_fundings(orcid = my_orcid)
funds <- funds_raw[[my_orcid]]$group$`funding-summary` |>
  dplyr::bind_rows() |>
  tibble::as_tibble() |>
  janitor::clean_names() |>
  dplyr::mutate(
    location = paste0(
      organization_name,
      " (",
      organization_address_city,
      ", ",
      organization_address_country,
      ")"
    )
  ) |>
  dplyr::arrange(
    dplyr::desc(start_date_year_value),
    title_title_value
  ) |>
  cvshortevents(
    what = "title_title_value",
    when = "start_date_year_value",
    where = "location"
  )
```

# Honors and Awards

```{r}
#| label: honors
#| output: asis

honors_raw <- rorcid::orcid_distinctions(orcid = my_orcid)
honors <- honors_raw[[my_orcid]]$`affiliation-group`$summaries |>
  dplyr::bind_rows() |>
  tibble::as_tibble() |>
  janitor::clean_names() |>
  cvshortevents(
    what = "distinction_summary_role_title",
    when = "distinction_summary_start_date_year_value",
    where = "distinction_summary_organization_name"
  )
```

# Publications

My ORCiD is [0000-0003-3031-322X](https://orcid.org/0000-0003-3031-322X) and Google Scholar is [QbPv1H0AAAAJ](https://scholar.google.com/citations?user=QbPv1H0AAAAJ).

## Journal Articles

Code for my PhD research output can be found [here](https://github.com/stars/lorenzoFabbri/lists/phd-papers).

---
nocite: |
  @*
---

\boldname{Fabbri}{Lorenzo}{L.}

::: {#refs}
:::

## Articles under review and revising

1. Multi-omics architecture of obesity and metabolic dysfunction in childhood: identifying biological pathways and prenatal determinants. *Co-author. Accepted in Nature Communications.*

## Software Packages

My GitHub profile can be found [here](https://github.com/lorenzoFabbri).

```{r}
#| label: software
#| output: asis

software_raw <- rorcid::orcid_works(orcid = my_orcid)
software <- software_raw[[my_orcid]]$work |>
  dplyr::filter(type == "software") |>
  dplyr::bind_rows() |>
  tibble::as_tibble() |>
  janitor::clean_names() |>
  dplyr::select(dplyr::all_of(c(
    "title_title_value",
    "publication_date_year_value",
    "url_value"
  ))) |>
  dplyr::arrange(
    dplyr::desc("publication_date_year_value"),
    "title_title_value"
  ) |>
  cvshortevents(
    what = "title_title_value",
    when = "publication_date_year_value",
    where = "url_value"
  )
```

# Conference Presentations

Posters can be found [here](https://figshare.com/authors/Lorenzo_Fabbri/11879642).

```{r}
#| label: posters
#| output: asis

conf <- tibble::tribble(
  ~what, ~when, ~where,
  "A precision environmental health approach to childhood obesity and metabolic dysfunction: identifying biological pathways and prenatal determinants", "2024", "ISEE Annual Conference, Santiago (CL)",
  "Prenatal Exposure to Chemical Mixtures and Metabolic Syndrome Risk in European Children", "2024", "ISEE Annual Conference, Santiago (CL)",
  "Childhood exposure to non-persistent endocrine disrupting chemicals and multi-omic profiles: a panel study", "2022", "ISEE Annual Conference, Athens (GR)",
  "Childhood exposure to non-persistent endocrine disrupting chemicals and multi-omic markers in a population-based child cohort", "2022", "EURION Cluster Annual Meeting (online)",
  "Childhood exposure to non-persistent endocrine disrupting chemicals and multi-omic markers in a population-based child cohort", "2022", "International Prenatal Programing and Toxicity Meeting (online)",
  "Efficient and Portable MPI Support for Approximate Bayesian Computation", "2017", "Platform for Advanced Scientific Computing Conference, Lugano (CH)"
) |>
  dplyr::arrange(dplyr::desc(when)) |>
  cvshortevents(
    what = "what",
    when = "when",
    where = "where"
  )
```

# Education

```{r}
#| label: education
#| output: asis

edu_raw <- rorcid::orcid_educations(orcid = my_orcid)
edu <- edu_raw[[my_orcid]]$`affiliation-group`$summaries |>
  dplyr::bind_rows() |>
  tibble::as_tibble() |>
  janitor::clean_names() |>
  dplyr::mutate(
    education_summary_end_date_year_value = tidyr::replace_na(
      education_summary_end_date_year_value, "Present"
    ),
    education_summary_organization_name = stringr::str_replace_all(
      education_summary_organization_name, "\\&", "and"
    ),
    location = paste0(
      education_summary_organization_name,
      " (",
      education_summary_organization_address_city,
      ", ",
      education_summary_organization_address_country,
      ")"
    ),
    dates = paste0(
      education_summary_start_date_year_value,
      " - ",
      education_summary_end_date_year_value
    ),
    details = list(
      c(
        "Epidemiology by Distance Learning - Individual modules.",
        "Fundamentals of Epidemiology (EPM101). Practical Epidemiology (EPM103)."
      ), # LSHTM
      c(
        "Mathematical statistics (M347)."
      ), # OU UK
      c(
        "Supervisor: Prof. Martine Vrijheid."
      ),
      c(
        "Thesis (FBK, Trento (IT)): Machine Learning for Predictive Drug Induced Hepatotoxicity. Supervised by: Dr. Cesare Furlanello, Dr. Marco Chierici, Prof. Enrico Domenici.",
        "Internship (HITS, Heidelberg (DE)): Machine and Deep Learning for Predictive Unbinding Kinetics of Kinases. Supervised by: Prof. Rebecca Wade, Dr. Daria Kokh, Prof. Raffaello Potestio.",
        "Final mark: 110/110 With Honors."
      ),
      c(
        "Project (USI, Lugano (CH)): Investigation by Computational Techniques of Channelopaties related to Sodium Channels. Supervised by: Prof. Vittorio Limongelli, Prof. Daniele Di Marino."
      ),
      c(
        "Thesis (RWTH, Aachen (DE)):  Whole Body PBPK Modeling of Valproic Acid. Supervised by: Prof. Elena Maestri, Prof. Lars M. Blank, Dr. Henrik Cordes.",
        "Final mark: 103/110."
      )
    )
  ) |>
  cvevents(
    what = "education_summary_role_title",
    when = "dates",
    where = "location",
    details = "details"
  )
```

# Continuing Education

```{r}
#| label: cont_edu
#| output: asis

cont_edu <- tibble::tribble(
  ~what, ~when, ~where,
  "Spring School in Causal Inference with Observational Data", "04/2022", "Causal Insights, Leeds (UK)",
  "Computational Bayesian methods using brms in R", "02/2022", "Physalia Courses, online",
  "ELIXIR Omics Integration and Systems Biology", "09/2021", "National Bioinformatics Infrastructure Sweden, online",
  "Advanced Statistics: Statistical Modelling", "08/2021", "Swiss Institute of Bioinformatics, online",
  "Alpine Exposome Summer School", "06/2021", "Inserm and ATHLETE, online",
  "Metabolomics Data Processing and Data Analysis", "02/2021", "University of Birmingham, online",
  "Mendelian Randomisation", "05/2020", "Imperial College London, online",
  "Image Analysis and Modeling of Complex Biological Dynamics", "09/2017", "University of Wurzburg, Wurzburg (DE)",
  "Effective High Performance Computing Summer School", "07/2017", "CSCS and University of Lugano, Lugano (CH)",
  "MARVEL School on Variationally Enhanced Sampling", "02/2017", "University of Lugano, Lugano (CH)",
  "Advanced Course in Alternatives to Animal Experimentation", "11/2015", "University of Genova, Genoa (IT)"
) |>
  dplyr::mutate(
    when = lubridate::my(when)
  ) |>
  dplyr::arrange(dplyr::desc(when)) |>
  dplyr::mutate(
    when = format(as.Date(when), "%b %Y")
  ) |>
  cvshortevents(
    what = "what",
    when = "when",
    where = "where"
  )
```

# Service

```{r}
#| label: service
#| output: asis

service_raw <- rorcid::orcid_services(orcid = my_orcid)
memberships_raw <- rorcid::orcid_memberships(orcid = my_orcid)
service <- service_raw[[my_orcid]]$`affiliation-group` |>
  dplyr::bind_rows() |>
  tibble::as_tibble() |>
  tidyr::unnest(cols = "summaries") |>
  janitor::clean_names() |>
  dplyr::arrange(
    dplyr::desc(service_summary_start_date_year_value),
    dplyr::desc(service_summary_end_date_year_value)
  ) |>
  dplyr::mutate(
    summary_end_date_year_value = tidyr::replace_na(
      service_summary_end_date_year_value, "Present"
    ),
    dates = paste0(
      service_summary_start_date_year_value,
      " - ",
      summary_end_date_year_value
    ),
    summary_role_title = service_summary_role_title,
    summary_organization_name = service_summary_organization_name
  )
memberships <- memberships_raw[[my_orcid]]$`affiliation-group` |>
  dplyr::bind_rows() |>
  tibble::as_tibble() |>
  tidyr::unnest(cols = "summaries") |>
  janitor::clean_names() |>
  dplyr::arrange(
    dplyr::desc(membership_summary_start_date_year_value),
    dplyr::desc(membership_summary_end_date_year_value)
  ) |>
  dplyr::mutate(
    summary_end_date_year_value = tidyr::replace_na(
      membership_summary_end_date_year_value, "Present"
    ),
    dates = paste0(
      membership_summary_start_date_year_value,
      " - ",
      summary_end_date_year_value
    ),
    summary_role_title = "Member",
    summary_organization_name = membership_summary_organization_name
  )

dplyr::bind_rows(service, memberships) |>
  cvshortevents(
    what = "summary_organization_name",
    when = "dates",
    where = "summary_role_title"
  )
```

# Skills

```{r}
skills <- tibble::tribble(
  ~what, ~details,
  "Languages", "Italian (native), English (C1, IELTS 7.0), Spanish (basic)",
  "Programming Languages", "R, Python, MATLAB, C",
  "Markup Languages", "LaTeX, Quarto/RMarkdown",
  "Software Development", "git, SLURM, High Performance Scientific Computing"
) |>
  as.data.frame()
colnames(skills) <- NULL

tinytable::tt(skills) |>
  tinytable::theme_tt(
    theme = "void"
  ) |>
  tinytable::style_tt(
    j = 1,
    bold = TRUE
  )
```
